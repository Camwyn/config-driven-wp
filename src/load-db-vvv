#!/usr/bin/env bash
# Load DB dump (database/vvv-data.sql) to empied DB, and flush Memcached
# Author: Weston Ruter (@westonruter), X-Team <http://x-team.com/wordpress/>
# Usage: bin/load-db-vvv
# License: GPLv2+
# Tip: With vassh[1] you can invoke from host machine
# [1]: <https://github.com/x-team/vassh>

set -e
cd $(dirname $0)/..
if [ $USER != 'vagrant' ]; then
	echo "Error: Must be run in the vagrant environment" 1>&2
	exit 1
fi
if [ $(cat config/active-env) != 'vvv' ]; then
	echo "Error: Only applicable in vvv environment" 1>&2
	exit 1
fi

dump_file=database/vvv-data.sql

# Why aren't we just using WP-CLI's db import? Becasue we want to first drop all tables
# to ensure that extra tables don't persist which don't have DROP TABLE IF EXISTS
# in vvv-data.sql

wp eval '
	global $wpdb;
	$wpdb->query( "DROP TABLE " . join( ", ", $wpdb->get_col( "SHOW TABLES" ) ) );
	if ( empty( $wpdb->last_error ) ) {
		echo "Dropped tables prior to load\n";
		exit(0);
	}
	else {
		echo "WPDB error: $wpdb->last_error\n";
		exit(1);
	}
'

# And here we really can use WP-CLI db import, except that the DB_CHARSET was not supplied
# until the recent commit: https://github.com/wp-cli/wp-cli/commit/1c3f9e5b5

mysql $(wp eval '
	printf( "--host=%s ", DB_HOST );
	printf( "--user=%s ", DB_USER );
	printf( "--password=%s ", DB_PASSWORD );
	printf( "--default-character-set=%s ", DB_CHARSET );
	printf( "%s ", DB_NAME );
') < $dump_file

# Flush Object Cache
sudo service memcached restart
